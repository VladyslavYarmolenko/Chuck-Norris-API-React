{"version":3,"sources":["components/JokesWrap/Joke/Joke.module.css","components/Main/Main.module.css","components/Toggler/Toggler.module.css","components/Preloader/Preloader.module.css","components/Favorites/Favorites.module.css","components/Inputs/Inputs.module.css","redux/jokesReducer.js","components/JokesWrap/Joke/Joke.jsx","components/Favorites/Favorites.jsx","components/Inputs/Inputs.js","components/JokesWrap/JokesWrapper.jsx","components/Toggler/Toggler.jsx","components/Main/Main.jsx","components/Preloader/Preloader.jsx","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","initialState","isLoading","categories","jokes","jokesCount","favorites","localStorage","getItem","JSON","parse","burgerIsChecked","jokesReducer","state","type","payload","result","total","favoriteJokes","push","setItem","stringify","filter","item","id","Joke","props","joke","useSelector","dispatch","useDispatch","category","jokeID","jokeText","value","update","updated_at","split","className","s","joke_item","joke_item_header","onClick","resultJoke","find","jokeObj","addFavoriteJoke","heart_checked","heart_unchecked","joke_item_center","note_image_wrapper","note_image","joke_content","joke_ID","title_ID","ID_num","exit_img","joke_text","joke_item_bottom","update_title","update_info","length","category_name","connect","Favor_visible","Favor","map","Inputs","selectedType","query","radioButttonHandle","setState","selectedCategoryHandle","searchInputHandle","e","queryValue","target","submitFormHandle","preventDefault","requestJoke","data","this","fetchCategories","onSubmit","radio_container","for","label","checked","radio","button_selected","onChange","search_input","placeholder","submit","React","Component","mapDispatchToProps","axios","get","then","response","catch","error","dataObj","url","params","JokesWrapper","currentPage","pageSize","handleChangePage","newCurrentPage","pagesCount","Math","ceil","pages","i","pageWrapper","page","index","array","pageNum","slice","Toggler","checkBoxHandle","showFavorites","overlay","checkbox_burger","burger_menu","boolean","favoritesShow","Main","Top","Label","Greet","Offer","Preloader","loading","preloader","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ddba558f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"joke_item\":\"Joke_joke_item__2ckVP\",\"joke_item_header\":\"Joke_joke_item_header__2-kpU\",\"joke_item_center\":\"Joke_joke_item_center__15jDn\",\"note_image_wrapper\":\"Joke_note_image_wrapper__-EOvj\",\"joker_content\":\"Joke_joker_content__1bTdx\",\"joke_ID\":\"Joke_joke_ID__3iwnP\",\"joke_item_bottom\":\"Joke_joke_item_bottom__3DEMq\",\"update\":\"Joke_update__xvrlt\",\"category_name\":\"Joke_category_name__2YZiU\",\"title_ID\":\"Joke_title_ID__3Qxmy\",\"ID_num\":\"Joke_ID_num__2mvFS\",\"heart_checked\":\"Joke_heart_checked__1bljQ\",\"heart_unchecked\":\"Joke_heart_unchecked__3pztQ\",\"note_image\":\"Joke_note_image__xAHw_\",\"joke_content\":\"Joke_joke_content__3qCO6\",\"exit_img\":\"Joke_exit_img__3gsCD\",\"joke_text\":\"Joke_joke_text__7lcrx\",\"update_info\":\"Joke_update_info__247E7\",\"pageWrapper\":\"Joke_pageWrapper__AEDGO\",\"pageNum\":\"Joke_pageNum__2I1GE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__17Ivd\",\"Top\":\"Main_Top__1RauX\",\"Label\":\"Main_Label__EKQlK\",\"Greet\":\"Main_Greet__1F4m3\",\"Offer\":\"Main_Offer__RXrF-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox_burger\":\"Toggler_checkbox_burger__1ae8P\",\"burger_menu\":\"Toggler_burger_menu__30L9E\",\"overlay\":\"Toggler_overlay__1eVes\",\"checked\":\"Toggler_checked__1lpD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Preloader_loading__29Xwg\",\"overlay\":\"Preloader_overlay__3Wn2w\",\"preloader\":\"Preloader_preloader__3ATSx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Favor\":\"Favorites_Favor__3Cae9\",\"Favor_visible\":\"Favorites_Favor_visible__3LcWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio_container\":\"Inputs_radio_container__m4FQR\",\"label\":\"Inputs_label__3ZK4x\",\"radio\":\"Inputs_radio__3qXcu\",\"category\":\"Inputs_category__3go_Z\",\"button_selected\":\"Inputs_button_selected__3ScrX\",\"search_input\":\"Inputs_search_input__tPZnv\",\"submit\":\"Inputs_submit__3zj8x\"};","import axios from 'axios';\n\nconst REQUEST_JOKES_START = 'REQUEST_JOKES_START';\nconst REQUEST_JOKES_FAILURE = 'REQUEST_JOKES_FAILURE';\nconst REQUEST_CATEGORIES_SUCCESS = 'REQUEST_CATEGORIES_SUCCESS';\nconst REQUEST_JOKES_SUCCESS = 'REQUEST_JOKES_SUCCESS';\nconst REQUEST_JOKES_SEARCH_SUCCESS = 'REQUEST_JOKES_SEARCH_INPUT_SUCCESS';\nconst ADD_FAVORITES_JOKE = 'ADD_FAVORITES_JOKE';\nconst REMOVE_FAVORITES_JOKE = 'REMOVE_FAVORITES_JOKE';\nconst FAVORITES_SHOW = 'FAVORITES_SHOW'\n\nlet initialState = {\n  isLoading: false,\n  categories: [],\n  jokes : [],\n  jokesCount: '',\n  favorites: localStorage.getItem('favorites') ? JSON.parse(localStorage.getItem('favorites')) : [],\n  burgerIsChecked: false,\n}\n\n\nconst jokesReducer = (state = initialState, { type, payload }) => {\n  switch(type) {\n\n    case REQUEST_JOKES_START:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case REQUEST_JOKES_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n      }\n\n    case REQUEST_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        categories: payload,\n      }\n\n    case REQUEST_JOKES_SUCCESS:\n      let jokes = [payload];\n      return {\n        ...state,\n        isLoading: false,\n        jokes: jokes,\n      }\n\n    case REQUEST_JOKES_SEARCH_SUCCESS:\n      return {\n        ...state,\n        jokes: payload.result,\n        jokesCount: payload.total,\n      }\n\n    case ADD_FAVORITES_JOKE: {\n      let favoriteJokes = localStorage.getItem('favorites');\n      if (favoriteJokes) {\n        favoriteJokes = JSON.parse(favoriteJokes);\n        favoriteJokes.push(payload)\n      } else {\n        favoriteJokes = [payload];\n      }\n      localStorage.setItem('favorites', JSON.stringify(favoriteJokes))\n      return {\n        ...state,\n        favorites: favoriteJokes,\n      }\n    }\n    case REMOVE_FAVORITES_JOKE: {\n      let favoriteJokes = localStorage.getItem('favorites');\n      if (favoriteJokes) {\n        favoriteJokes = JSON.parse(favoriteJokes);\n        favoriteJokes = favoriteJokes.filter(item => payload.id !== item.id);\n      } else {\n        favoriteJokes = [];\n      }\n      localStorage.setItem('favorites', JSON.stringify(favoriteJokes))\n      return {\n        ...state,\n        favorites: favoriteJokes,\n      }\n    }\n\n    case FAVORITES_SHOW:\n      return {\n        ...state, \n        burgerIsChecked: payload,\n      }\n      \n    default:\n      return state;\n  }\n}\n\n\nexport const fetchCategories = () => (dispatch) => {\n  dispatch({ type: REQUEST_JOKES_START });\n\n  axios.get('https://api.chucknorris.io/jokes/categories')\n  .then((response) => {\n    const categories = response.data;\n\n    dispatch({ \n      type: REQUEST_CATEGORIES_SUCCESS,\n      payload: categories\n    });\n  }).catch(function (error) {\n    dispatch({ type: REQUEST_JOKES_FAILURE });\n  })\n}\n\nexport const requestJoke = (dataObj, type) => (dispatch) => {\n\n\ndispatch({ type: REQUEST_JOKES_START });\n\nlet url = 'https://api.chucknorris.io/jokes/'\n\nif (type === 'categories' || type === 'random') {  \n    url = url + 'random/'\n} else {\n    url = url + 'search/'\n}\n\n axios.get(url, {params: dataObj})\n .then((response) => {\n   const data = response.data;\n   \n\nif (type === 'search'){\n    dispatch({ type: REQUEST_JOKES_SEARCH_SUCCESS, payload: data})\n} else {\n    dispatch({ type: REQUEST_JOKES_SUCCESS, payload: data});}\n }).catch(function (error) {\n    dispatch({ type: REQUEST_JOKES_FAILURE });\n  })\n}\n\nexport const addFavoriteJoke = (jokeObj) => {\n  return {\n    type: ADD_FAVORITES_JOKE,\n    payload: jokeObj,\n  }\n}\n\n\nexport const removeFavoriteJoke = (jokeObj) => {\n  return {\n    type: REMOVE_FAVORITES_JOKE,\n    payload: jokeObj,\n  }\n}\n\nexport const favoritesShow = (boolean) => {\n  return {\n    type: FAVORITES_SHOW,\n    payload: boolean,\n  }\n  \n}\n\n\nexport default jokesReducer;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport s from './Joke.module.css';\nimport {addFavoriteJoke, removeFavoriteJoke} from '../../../redux/jokesReducer'\n\n\nconst Joke = (props) => {\n\n  const { joke } = props;\n  const { favorites } = useSelector(state => state.jokesReducer);\n  const dispatch = useDispatch();\n  \n\n  let category = props.joke.categories;\n  let jokeID = props.joke.id;\n  let jokeText = props.joke.value;\n  let update = props.joke.updated_at.split(' ')[0];\n\n  const favoritesHandle = () => {\n    let resultJoke = favorites.find(item => item.id === joke.id);\n    if (resultJoke) {\n      dispatch(removeFavoriteJoke(joke))\n    } else {\n      dispatch(addFavoriteJoke(joke))\n    }\n  }\n\n  return (\n    <div className={s.joke_item}>\n      <div className={s.joke_item_header}>\n        <div onClick={favoritesHandle} className={favorites.find(item => item.id === joke.id) ? s.heart_checked  : s.heart_unchecked}></div>\n      </div>\n      <div className={s.joke_item_center}>\n        <div className={s.note_image_wrapper}>\n          <div className={s.note_image}></div>\n        </div>\n        <div className={s.joke_content}>\n          <div className={s.joke_ID}>\n            <p className={s.title_ID}>ID:</p>\n              <p className={s.ID_num}>{jokeID}</p>\n            <div className={s.exit_img}></div>\n          </div>\n            <div className={s.joke_text}>{jokeText}</div>\n        </div>\n      </div>\n      <div className={s.joke_item_bottom}>\n        <div className={s.update}>\n          <p className={s.update_title}>Last update:</p>\n            <p className={s.update_info}>{update}</p>\n        </div>\n          {category.length > 0 && <div className={s.category_name}>{category}</div>}\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default  Joke;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Joke from '../JokesWrap/Joke/Joke';\nimport s from './Favorites.module.css';\n\n\nconst Favorites = (props) => {\n\n const { burgerIsChecked } = props;\n\n  return (\n    <div className={ burgerIsChecked ? s.Favor_visible : s.Favor }>\n      {props.favorites.map(joke => <Joke joke = {joke}/>)}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return({\n    favorites: state.jokesReducer.favorites,\n    burgerIsChecked: state.jokesReducer.burgerIsChecked,\n  })\n}\n\nexport default connect(mapStateToProps)(Favorites);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCategories, requestJoke } from '../../redux/jokesReducer';\nimport s from './Inputs.module.css'\n\nclass Inputs extends React.Component {\n  state = {\n    selectedType: 'random',\n    category: '',\n    query: '',\n  }\n\n  componentDidMount() {\n    const { fetchCategories, categories } = this.props;\n\n    if (!categories.length) {\n      fetchCategories();\n    }\n  }\n  \n  radioButttonHandle = (type) => {\n    this.setState({\n      selectedType: type,\n    })\n  }\n\n  selectedCategoryHandle = (category) => {\n    this.setState({\n      category: category,\n      query: '',\n    })\n  }\n\n  searchInputHandle = (e) => {\n    const queryValue = e.target.value\n    this.setState({\n      query: queryValue,\n      category: '',\n    })\n  }\n\n  submitFormHandle = (e) => {\n    e.preventDefault();\n    const { requestJoke } = this.props;\n    const { selectedType, category, query } = this.state;\n    const data = {};\n\n    if(selectedType === 'categories'){\n      data.category = category;\n    } else if (selectedType === 'search'){\n      data.query = query;\n    } else if (selectedType === 'random'){\n    }\n    requestJoke(data, selectedType);\n  }\n\n  render() {\n    const { selectedType } = this.state;\n    const { categories } = this.props;\n    \n    return(\n      <div>\n        <form onSubmit={(e) => this.submitFormHandle(e)}>\n          <div className={s.radio_container}>\n            <label for=\"random\" onClick={() => this.radioButttonHandle('random')} className={s.label}>\n              <input type='radio' id=\"random\" checked={selectedType === 'random'} className={s.radio}/>\n              Random\n            </label>\n          </div>\n          <div className={s.radio_container}>\n            <label for=\"categories\" onClick={() => this.radioButttonHandle('categories')} className={s.label}>\n              <input type='radio' id=\"categories\" checked={selectedType === 'categories'} className={s.radio}/>\n              From categories\n            </label>\n            { selectedType === 'categories' && <div>{categories.map(category => {\n              return (<button type=\"button\" onClick={() => this.selectedCategoryHandle(category)} className={this.state.category === category? s.button_selected : s.category}>{category}</button>)\n            })}</div> }\n          </div>\n          <div >\n            <label for=\"search\" onClick={() => this.radioButttonHandle('search')} className={s.label}>\n              <input type='radio' id=\"search\" checked={selectedType === 'search'} className={s.radio}/>\n              Search\n            </label>\n            { selectedType === 'search' && <div> <input onChange={(e) => this.searchInputHandle(e)} type=\"text\" className={s.search_input} placeholder=\"Free text search...\"/></div> }\n          </div>\n          <button type=\"submit\" className={s.submit}>Get a joke</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n\n  return ({\n    isLoading: state.jokesReducer.isLoading,\n    categories: state.jokesReducer.categories,\n  })\n};\n\nconst mapDispatchToProps = {\n  fetchCategories,\n  requestJoke,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputs);","import React from 'react';\nimport { connect } from 'react-redux';\nimport Joke from './Joke/Joke';\nimport s from '././Joke/Joke.module.css';\n\nclass JokesWrapper extends React.Component {\n    state = {\n    currentPage: 0,\n    pageSize : 5,\n  }\n\n  handleChangePage = (newCurrentPage) => {\n    this.setState({\n      currentPage: newCurrentPage,\n    })\n  }\n\n  render(){\n    const { jokesCount, jokes } = this.props;\n    const { pageSize, currentPage } = this.state;\n\n    let pagesCount = Math.ceil(jokesCount / pageSize);\n    let pages = [];\n\n    for (let i = 1; i <= pagesCount; i++){\n      pages.push(i);\n    }\n\n    return( <div>\n      <div className={s.pageWrapper} >\n        {pages.map((page, index, array) => {\n          // removed className={s}\n          return <button className={s.pageNum} onClick={ () => this.handleChangePage(index)}>{index + 1}</button>\n        })}\n      </div>\n      <div \n      // className={s.background}\n      >\n        {jokes.slice(currentPage * pageSize, currentPage * pageSize + pageSize).map((joke, index, array) => {\n          // if (index >= currentPage * pageSize && index <= currentPage * pageSize + pageSize) {\n            return <Joke joke={joke}/>\n          // } \n        })}\n    </div>\n    </div>)\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    \n    jokes: state.jokesReducer.jokes,\n    jokesCount: state.jokesReducer.jokesCount,\n  })\n}\n\nexport default connect(mapStateToProps)(JokesWrapper);","\nimport React from 'react';\nimport s from './Toggler.module.css'\nimport { connect } from 'react-redux';\nimport { favoritesShow } from '../../redux/jokesReducer'\n\n\nclass Toggler extends React.Component {\n  state = {\n    burgerIsChecked : false,\n  }\n  \n  checkBoxHandle = () => {\n    const { burgerIsChecked } = this.state;\n    const { showFavorites } = this.props;\n    this.setState ({\n      burgerIsChecked : !burgerIsChecked,\n    }, () => {\n      showFavorites(!burgerIsChecked);\n    });\n  }\n\n  render(){\n\n    const { burgerIsChecked } = this.state;\n  return(\n    <>\n    {  burgerIsChecked && <div className={s.overlay} ></div>}\n    <div className={burgerIsChecked? s.checked : s.checkbox_burger} id=\"checkbox_div\">\n        <input type=\"checkbox\" className={s.burger_menu} id=\"checkbox-toggle\"/>\n        <label onClick={this.checkBoxHandle} for=\"checkbox-toggle\">Favourite</label>\n    </div>\n    </>\n  )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    showFavorites: (boolean) => {\n      dispatch(favoritesShow(boolean))\n    }\n  }\n}\nexport default connect ('',mapDispatchToProps) (Toggler);","import React from 'react';\nimport Inputs from '../Inputs/Inputs';\nimport JokesWrapper from '../JokesWrap/JokesWrapper';\nimport Toggler from '../Toggler/Toggler';\nimport s from './Main.module.css';\n\nconst Main = (props) => {\n  return (\n    <div className={s.Main}>\n      <div className={s.Top}>\n        <div> \n          <p className={s.Label}>MSI 2020</p>\n          <p className={s.Greet}>Hey!</p>\n          <p className={s.Offer}>Let`s try to find a joke for you:</p>\n        </div>\n        <Toggler/>\n      </div>\n      <Inputs/>\n      <JokesWrapper/>\n    </div>\n  )\n}\n\nexport default Main;","import React from 'react';\nimport s from './Preloader.module.css'\n\n\nconst Preloader = (props) => {\n  return(\n    <div className={s.loading}>\n      <div className={s.overlay}>\n        <div className={s.preloader}></div>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default Preloader;","\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Favorites from './components/Favorites/Favorites';\nimport Main from './components/Main/Main';\nimport Preloader from './components/Preloader/Preloader';\n\n\nconst App = (props) => {\n\n  const { isLoading } = props;\n\n  return (\n    <div className=\"app-wrapper\">\n      {isLoading && <Preloader/>}\n      <Main/>\n      <Favorites/>\n    </div>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  return({\n    isLoading: state.jokesReducer.isLoading,\n  })\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport jokesReducer from './jokesReducer';\n\nlet reducers = combineReducers({\n  jokesReducer\n});\n\nlet store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}